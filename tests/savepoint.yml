---

- name: Testing Savepoints
  hosts: localhost
  gather_facts: no
  module_defaults:
    ansibleguy.opnsense.savepoint:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

  tasks:
    - name: Canceling filter savepoint rollback - does not exist
      ansibleguy.opnsense.savepoint:
        action: 'cancel_rollback'
        controller: 'filter'
        revision: 'non-existent'

    - name: Reverting filter savepoint - does not exist
      ansibleguy.opnsense.savepoint:
        action: 'revert'
        controller: 'filter'
        revision: 'non-existent'

    - name: Creating filter savepoint
      ansibleguy.opnsense.savepoint:
        action: 'create'
        controller: 'filter'
      register: opn1
      failed_when: >
        opn1.failed or
        'revision' not in opn1 or
        not opn1.revision
      when: not ansible_check_mode

    - name: Applying filter savepoint
      ansibleguy.opnsense.savepoint:
        action: 'apply'
        controller: 'filter'
        revision: "{{ opn1.revision }}"
      when: not ansible_check_mode

    - name: Canceling filter savepoint rollback
      ansibleguy.opnsense.savepoint:
        action: 'cancel'
        controller: 'filter'
        revision: "{{ opn1.revision }}"
      when: not ansible_check_mode

    - name: Creating filter savepoint - to be reverted
      ansibleguy.opnsense.savepoint:
        action: 'create'
        controller: 'filter'
      register: opn2
      failed_when: >
        opn2.failed or
        'revision' not in opn2 or
        not opn2.revision
      when: not ansible_check_mode

    - name: Applying filter savepoint - to be reverted
      ansibleguy.opnsense.savepoint:
        action: 'apply'
        controller: 'filter'
        revision: "{{ opn2.revision }}"
      when: not ansible_check_mode

    - name: Reverting filter savepoint
      ansibleguy.opnsense.savepoint:
        action: 'revert'
        controller: 'filter'
        revision: "{{ opn2.revision }}"
      when: not ansible_check_mode

    - name: Creating source-nat savepoint
      ansibleguy.opnsense.savepoint:
        action: 'create'
        controller: 'source_nat'
      register: opn4
      failed_when: >
        opn4.failed or
        'revision' not in opn4 or
        not opn4.revision
      when: not ansible_check_mode

    - name: Applying source-nat savepoint
      ansibleguy.opnsense.savepoint:
        action: 'apply'
        controller: 'source_nat'
        revision: "{{ opn4.revision }}"
      when: not ansible_check_mode

    - name: Canceling source-nat savepoint rollback
      ansibleguy.opnsense.savepoint:
        action: 'cancel_rollback'
        controller: 'source_nat'
        revision: "{{ opn4.revision }}"
      when: not ansible_check_mode
