---

- name: Cleaning up firewall config
  hosts: localhost
  gather_facts: no
  module_defaults:
    ansibleguy.opnsense.alias_purge:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.rule_purge:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false
      match_fields: ['description']
      key_field: 'description'

    ansibleguy.opnsense.package:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.cron:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.route:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false
      match_fields: ['description']

    ansibleguy.opnsense.unbound_dot:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.unbound_forward:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.unbound_host_alias:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false
      match_fields: ['description']

    ansibleguy.opnsense.unbound_host:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false
      match_fields: ['description']

    ansibleguy.opnsense.unbound_domain:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false
      match_fields: ['description']

    ansibleguy.opnsense.syslog:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false
      match_fields: ['description']

    ansibleguy.opnsense.ipsec_cert:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.shaper_pipe:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.shaper_queue:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.shaper_rule:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.monit_service:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.monit_alert:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.monit_test:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.wireguard_server:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.wireguard_peer:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.interface_vlan:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.interface_vxlan:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.source_nat:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false
      match_fields: ['description']

    ansibleguy.opnsense.frr_bfd:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.frr_bgp_general:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

  tasks:
    - name: Cleanup Rules
      ansibleguy.opnsense.rule_purge:
        force_all: true

    - name: Cleanup Aliases
      ansibleguy.opnsense.alias_purge:
        force_all: true

    - name: Cleanup packages
      ansibleguy.opnsense.package:
        name: ['os-api-backup', 'os-dmidecode']
        action: "{{ item }}"
      diff: false
      loop:
        - 'unlock'
        - 'remove'

    - name: Cleanup cron jobs
      ansibleguy.opnsense.cron:
        description: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1'
        - 'ANSIBLE_TEST_2'

    - name: Cleanup routes
      ansibleguy.opnsense.route:
        description: "{{ item }}"
        network: '192.168.0.0/32'
        gateway: 'LAN_GW'
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1'
        - 'ANSIBLE_TEST_2'

    - name: Cleanup DNS-over-TLS
      ansibleguy.opnsense.unbound_dot:
        domain: "{{ item.d }}"
        target: "{{ item.t }}"
        state: 'absent'
      loop:
        - {d: 'dot.opnsense.test.ansibleguy.net', t: '1.1.1.1'}
        - {d: 'dot.opnsense.test.ansibleguy.net', t: '1.1.1.2'}

    - name: Cleanup DNS-Forwardings
      ansibleguy.opnsense.unbound_forward:
        domain: "{{ item.d }}"
        target: "{{ item.t }}"
        state: 'absent'
      loop:
        - {d: 'fwd.opnsense.test.ansibleguy.net', t: '1.1.1.1'}
        - {d: 'fwd.opnsense.test.ansibleguy.net', t: '1.1.1.2'}

    - name: Cleanup DNS host-override aliases
      ansibleguy.opnsense.unbound_host_alias:
        description: "{{ item }}"
        alias: 'dummy'
        domain: 'dummy'
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'

    - name: Cleanup DNS host-overrides
      ansibleguy.opnsense.unbound_host:
        description: "{{ item }}"
        hostname: 'dummy'
        domain: 'dummy'
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
        - 'ANSIBLE_TEST_2_1'

    - name: Cleanup DNS domain-overrides
      ansibleguy.opnsense.unbound_domain:
        description: "{{ item }}"
        domain: 'dummy.local'
        server: '192.168.0.1'
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
        - 'ANSIBLE_TEST_1_3'

    - name: Cleanup syslog
      ansibleguy.opnsense.syslog:
        description: "{{ item }}"
        target: '192.168.0.1'
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1'
        - 'ANSIBLE_TEST_2'
        - 'ANSIBLE_TEST_3'

    - name: Cleanup ipsec certs
      ansibleguy.opnsense.ipsec_cert:
        name: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'

    - name: Cleanup shaper pipes
      ansibleguy.opnsense.shaper_pipe:
        description: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
        - 'ANSIBLE_TEST_2_1'
        - 'ANSIBLE_TEST_3_1'

    - name: Cleanup shaper queues
      ansibleguy.opnsense.shaper_queue:
        description: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
        - 'ANSIBLE_TEST_2_1'

    - name: Cleanup shaper rules
      ansibleguy.opnsense.shaper_rule:
        description: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'

    - name: Cleanup monit services
      ansibleguy.opnsense.monit_service:
        name: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
        - 'ANSIBLE_TEST_1_3'
        - 'ANSIBLE_TEST_1_4'

    - name: Cleanup monit alerts
      ansibleguy.opnsense.monit_alert:
        recipient: "{{ item }}"
        state: 'absent'
      loop:
        - 'alert@monit.opnsense.test.ansibleguy.net'
        - 'alert2@monit.opnsense.test.ansibleguy.net'

    - name: Cleanup monit tests
      ansibleguy.opnsense.monit_test:
        name: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
        - 'ANSIBLE_TEST_2_1'

    - name: Cleanup wireguard servers
      ansibleguy.opnsense.wireguard_server:
        name: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'

    - name: Cleanup wireguard peers
      ansibleguy.opnsense.wireguard_peer:
        name: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
        - 'ANSIBLE_TEST_2_1'

    - name: Cleanup vlan interfaces
      ansibleguy.opnsense.interface_vlan:
        description: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'

    - name: Cleanup vxlan interfaces
      ansibleguy.opnsense.interface_vxlan:
        id: "{{ item }}"
        state: 'absent'
      loop:
        - 100
        - 101

    - name: Cleanup source-nat
      ansibleguy.opnsense.source_nat:
        description: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'

    - name: Cleanup frr bfd
      ansibleguy.opnsense.frr_bfd:
        ip: "{{ item }}"
        state: 'absent'
      loop:
        - '10.0.0.1'
        - '10.0.0.0/28'

    - name: Cleanup BGP general settings
      ansibleguy.opnsense.frr_bgp_general:
        as_number: 1337
        enabled: false
