---

- name: Testing Monit alert
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.list:
      target: 'monit_alert'

  vars:
    default_alert_count: 1

  tasks:
    - name: Listing
      ansibleguy.opnsense.list:
      register: opn10
      failed_when: >
        'data' not in opn10 or
        opn10.data | length != default_alert_count

    - name: Removing - does not exist
      ansibleguy.opnsense.monit_alert:
        recipient: 'alert@monit.opnsense.test.ansibleguy.net'
        state: 'absent'
      register: opn1
      failed_when: >
        opn1.failed or
        opn1.changed

    - name: Adding 1 - failing because of invalid reminder
      ansibleguy.opnsense.monit_alert:
        recipient: 'alert@monit.opnsense.test.ansibleguy.net@INVALID'
        reminder: 90000
      register: opn11
      failed_when: not opn11.failed

    - name: Adding 1 - failing because of invalid recipient
      ansibleguy.opnsense.monit_alert:
        recipient: 'alert@monit.opnsense.test.ansibleguy.net@INVALID'
      register: opn12
      failed_when: not opn12.failed

    - name: Adding 1
      ansibleguy.opnsense.monit_alert:
        recipient: 'alert@monit.opnsense.test.ansibleguy.net'
      register: opn4
      failed_when: >
        opn4.failed or
        not opn4.changed

    - name: Disabling 1
      ansibleguy.opnsense.monit_alert:
        recipient: 'alert@monit.opnsense.test.ansibleguy.net'
        enabled: false
      register: opn6
      failed_when: >
        opn6.failed or
        not opn6.changed
      when: not ansible_check_mode

    - name: Disabling 1 - nothing changed
      ansibleguy.opnsense.monit_alert:
        recipient: 'alert@monit.opnsense.test.ansibleguy.net'
        enabled: false
      register: opn9
      failed_when: >
        opn9.failed or
        opn9.changed
      when: not ansible_check_mode

    - name: Enabling 1
      ansibleguy.opnsense.monit_alert:
        recipient: 'alert@monit.opnsense.test.ansibleguy.net'
      register: opn7
      failed_when: >
        opn7.failed or
        not opn7.changed
      when: not ansible_check_mode

    - name: Adding 2
      ansibleguy.opnsense.monit_alert:
        recipient: 'alert2@monit.opnsense.test.ansibleguy.net'
        not_on: true
        events: ['timestamp']
        description: 'test1'
        reminder: 500
      register: opn5
      failed_when: >
        opn5.failed or
        not opn5.changed

    - name: Adding 2 - nothing changed
      ansibleguy.opnsense.monit_alert:
        recipient: 'alert2@monit.opnsense.test.ansibleguy.net'
        not_on: true
        events: ['timestamp']
        description: 'test1'
        reminder: 500
      register: opn13
      failed_when: >
        opn13.failed or
        opn13.changed
      when: not ansible_check_mode

    - name: Removing 2
      ansibleguy.opnsense.monit_alert:
        recipient: 'alert2@monit.opnsense.test.ansibleguy.net'
        state: 'absent'
      register: opn8
      failed_when: >
        opn8.failed or
        not opn8.changed
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn3
      failed_when: >
        'data' not in opn3 or
        opn3.data | length != (default_alert_count + 1)
      when: not ansible_check_mode

    - name: Cleanup
      ansibleguy.opnsense.monit_alert:
        recipient: "{{ item }}"
        state: 'absent'
      loop:
        - 'alert@monit.opnsense.test.ansibleguy.net'
        - 'alert2@monit.opnsense.test.ansibleguy.net'
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn2
      failed_when: >
        'data' not in opn2 or
        opn2.data | length != default_alert_count
      when: not ansible_check_mode
