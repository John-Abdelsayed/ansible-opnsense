---

#- name: Testing FRR BGP Route-Maps
#  hosts: localhost
#  gather_facts: no
#  module_defaults:
#    ansibleguy.opnsense.frr_bgp_route_map:
#      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
#      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
#      ssl_verify: false
#
#    ansibleguy.opnsense.list:
#      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
#      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
#      ssl_verify: false
#      target: 'frr_bgp_route_map'
#
#  tasks:
#    - name: Listing
#      ansibleguy.opnsense.list:
#      register: opn_pre1
#      failed_when: >
#        'data' not in opn_pre1 or
#        opn_pre1.data | length != 0
#
#    - name: Removing - does not exist
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_1'
#        state: 'absent'
#      register: opn_pre2
#      failed_when: >
#        opn_pre2.failed or
#        opn_pre2.changed
#
#    - name: Adding 1 - failing because of invalid id
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_1'
#        id: 700
#        action: 'permit'
#      register: opn_fail1
#      failed_when: not opn_fail1.failed
#
#    - name: Adding 1 - failing because of non-existent prefix-list
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_1'
#        id: 50
#        action: 'permit'
#        prefix_list: 'DOES-NOT-EXIST'
#      register: opn_fail2
#      failed_when: not opn_fail2.failed
#
#    - name: Adding 1 - failing because of non-existent as-path
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_1'
#        id: 50
#        action: 'permit'
#        as_path_list: 'DOES-NOT-EXIST'
#      register: opn_fail3
#      failed_when: not opn_fail3.failed
#
#    - name: Adding 1 - failing because of non-existent community
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_1'
#        id: 50
#        action: 'permit'
#        community_list: 'DOES-NOT-EXIST'
#      register: opn_fail4
#      failed_when: not opn_fail4.failed
#
#    - name: Adding 1
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_1'
#        id: 50
#        action: 'permit'
#      register: opn1
#      failed_when: >
#        opn1.failed or
#        not opn1.changed
#
#    - name: Changing 1
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_1'
#        id: 45
#        action: 'deny'
#      register: opn9
#      failed_when: >
#        opn9.failed or
#        not opn9.changed
#
#    - name: Disabling 1
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_1'
#        id: 45
#        action: 'deny'
#        enabled: false
#      register: opn2
#      failed_when: >
#        opn2.failed or
#        not opn2.changed
#      when: not ansible_check_mode
#
#    - name: Disabling 1 - nothing changed
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_1'
#        id: 45
#        action: 'deny'
#        enabled: false
#      register: opn3
#      failed_when: >
#        opn3.failed or
#        opn3.changed
#      when: not ansible_check_mode
#
#    - name: Enabling 1
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_1'
#        id: 45
#        action: 'deny'
#      register: opn4
#      failed_when: >
#        opn4.failed or
#        not opn4.changed
#      when: not ansible_check_mode
#
#    - name: Adding 2
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_2'
#        id: 65
#        action: 'permit'
#        set: 'local-preference 300'
#      register: opn5
#      failed_when: >
#        opn5.failed or
#        not opn5.changed
#
#    - name: Adding 2 - nothing changed
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_2'
#        id: 65
#        action: 'permit'
#        set: 'local-preference 300'
#      register: opn6
#      failed_when: >
#        opn6.failed or
#        opn6.changed
#      when: not ansible_check_mode
#
#    - name: Removing 2
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: 'ANSIBLE_TEST_1_2'
#        state: 'absent'
#      register: opn7
#      failed_when: >
#        opn7.failed or
#        not opn7.changed
#      when: not ansible_check_mode
#
#    - name: Listing
#      ansibleguy.opnsense.list:
#      register: opn8
#      failed_when: >
#        'data' not in opn8 or
#        opn8.data | length != 1
#      when: not ansible_check_mode
#
#    - name: Cleanup
#      ansibleguy.opnsense.frr_bgp_route_map:
#        name: "{{ item }}"
#        state: 'absent'
#      loop:
#        - 'ANSIBLE_TEST_1_1'
#        - 'ANSIBLE_TEST_1_2'
#      when: not ansible_check_mode
#
#    - name: Listing
#      ansibleguy.opnsense.list:
#      register: opn_clean1
#      failed_when: >
#        'data' not in opn_clean1 or
#        opn_clean1.data | length != 0
#      when: not ansible_check_mode

- name: Testing FRR BGP Route-Maps - linking
  hosts: localhost
  gather_facts: no
  module_defaults:
    ansibleguy.opnsense.frr_bgp_route_map:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.frr_bgp_prefix_list:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.frr_bgp_community_list:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.frr_bgp_as_path:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.list:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false
      target: 'frr_bgp_route_map'

  tasks:
    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_pre3
      failed_when: >
        'data' not in opn_pre3 or
        opn_pre3.data | length != 0
      when: not ansible_check_mode

    - name: Adding dummy prefix-list
      ansibleguy.opnsense.frr_bgp_prefix_list:
        name: 'ANSIBLE_TEST_3_1'
        network: '10.0.10.0/24'
        seq: 50
        action: 'permit'
      when: not ansible_check_mode

    - name: Adding route-map linked to prefix-list 1
      ansibleguy.opnsense.frr_bgp_route_map:
        name: 'ANSIBLE_TEST_2_1'
        prefix_list: {'ANSIBLE_TEST_3_1': 50}
        id: 65
        action: 'permit'
        debug: true
      register: opn11
      failed_when: >
        opn11.failed or
        not opn11.changed
      when: not ansible_check_mode

    - name: Adding dummy prefix-list 2 (same name, different sequence)
      ansibleguy.opnsense.frr_bgp_prefix_list:
        name: 'ANSIBLE_TEST_3_1'
        network: '10.0.10.0/24'
        seq: 51
        action: 'permit'
      when: not ansible_check_mode

    - name: Adding route-map linked to prefix-lists 1+2
      ansibleguy.opnsense.frr_bgp_route_map:
        name: 'ANSIBLE_TEST_2_1'
        prefix_list: {'ANSIBLE_TEST_3_1': [50, 51]}
        id: 65
        action: 'permit'
      register: opn17
      failed_when: >
        opn17.failed or
        not opn17.changed
      when: not ansible_check_mode

    - name: Adding dummy community-list
      ansibleguy.opnsense.frr_bgp_community_list:
        description: 'ANSIBLE_TEST_2_1'
        number: 20
        seq: 20
        action: 'permit'
        community: 'test'
      when: not ansible_check_mode

    - name: Adding route-map linked to community-list
      ansibleguy.opnsense.frr_bgp_route_map:
        name: 'ANSIBLE_TEST_2_2'
        community_list: ['ANSIBLE_TEST_2_1']
        id: 66
        action: 'permit'
      register: opn13
      failed_when: >
        opn13.failed or
        not opn13.changed
      when: not ansible_check_mode

    - name: Adding dummy as-path
      ansibleguy.opnsense.frr_bgp_as_path:
        description: 'ANSIBLE_TEST_2_1'
        number: 20
        action: 'permit'
        as_pattern: 'as-pattern'
      when: not ansible_check_mode

    - name: Adding route-map linked to as-path
      ansibleguy.opnsense.frr_bgp_route_map:
        name: 'ANSIBLE_TEST_2_3'
        as_path_list: ['ANSIBLE_TEST_2_1']
        id: 67
        action: 'permit'
      register: opn15
      failed_when: >
        opn15.failed or
        not opn15.changed
      when: not ansible_check_mode

    - name: Cleanup route-maps
      ansibleguy.opnsense.frr_bgp_route_map:
        name: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_2_1'
        - 'ANSIBLE_TEST_2_2'
        - 'ANSIBLE_TEST_2_3'
      when: not ansible_check_mode

    - name: Cleanup prefix-list
      ansibleguy.opnsense.frr_bgp_prefix_list:
        name: 'ANSIBLE_TEST_3_1'
        seq: "{{ item }}"
        state: 'absent'
      loop:
        - 50
        - 51
      when: not ansible_check_mode

    - name: Cleanup community-list
      ansibleguy.opnsense.frr_bgp_community_list:
        description: 'ANSIBLE_TEST_2_1'
        state: 'absent'
      when: not ansible_check_mode

    - name: Cleanup as-path
      ansibleguy.opnsense.frr_bgp_as_path:
        description: 'ANSIBLE_TEST_2_1'
        state: 'absent'
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_clean2
      failed_when: >
        'data' not in opn_clean2 or
        opn_clean2.data | length != 0
      when: not ansible_check_mode
